package com.application.model.mongo;

import com.application.dto.ImageDto;
import com.application.util.CloudProvider;
import jakarta.validation.constraints.NotNull;
import lombok.Getter;
import lombok.Setter;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.index.Indexed;
import org.springframework.data.mongodb.core.mapping.Document;

import java.time.LocalDateTime;
import java.util.UUID;

@Getter
@Setter
@Document(collection = "user_images")
public class UserImageMongoModal {
    @Id
    private String id; // Auto-generated by MongoDB
    @NotNull
    private String userUUID;
    private String publicUrl;
    @NotNull
    @Indexed(unique = true)
    private String fileName = userUUID + "." + UUID.randomUUID();
    private Long fileSize;
    private String format;
    private Integer width;
    private Integer height;
    private LocalDateTime createdAt = LocalDateTime.now(); // Maps to image_created_at
    private LocalDateTime expireAt;
    private String cloudProvider = CloudProvider.AMAZON_S3.toString();

    public UserImageMongoModal() {
    }

    public UserImageMongoModal(String userUUID, String fileName, Integer width, Integer height) {
        this.userUUID = userUUID;
        this.fileName = fileName;
        this.width = width;
        this.height = height;
    }

    public UserImageMongoModal(String userUUID, String publicUrl, String fileName, Long fileSize, String format, Integer width, Integer height, LocalDateTime createdAt, LocalDateTime expireAt) {
        this.userUUID = userUUID;
        this.publicUrl = publicUrl;
        this.fileName = fileName;
        this.fileSize = fileSize;
        this.format = format;
        this.width = width;
        this.height = height;
        this.createdAt = createdAt;
        this.expireAt = expireAt;
    }

    public UserImageMongoModal(String userUUID, String publicUrl, String fileName, Long fileSize, String format, Integer width, Integer height, LocalDateTime createdAt, LocalDateTime expireAt, String cloudProvider) {
        this.userUUID = userUUID;
        this.publicUrl = publicUrl;
        this.fileName = fileName;
        this.fileSize = fileSize;
        this.format = format;
        this.width = width;
        this.height = height;
        this.createdAt = createdAt;
        this.expireAt = expireAt;
        this.cloudProvider = cloudProvider;
    }

    public ImageDto mapToImageDto() {
        ImageDto dto = new ImageDto();
        dto.set_id(this.id);
        dto.setOwner_UUID(this.userUUID);
        dto.setUrl(this.publicUrl);
        dto.setWidth(this.width != null ? String.valueOf(this.width) : null);
        dto.setHeight(this.height != null ? String.valueOf(this.height) : null);
        dto.setDescription(this.fileName); // Optional: map fileName as description
        return dto;
    }

}
